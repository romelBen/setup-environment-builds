#============================ CUSTOM ALIASES ===============================
colorls_path="$(which colorls)"
if [ -x "${colorls_path}" ] ; then
    alias ls='colorls'
    alias l='ls -a --sd'
    alias ll='ls -lta --sd'
    alias la='ls -A --sd'
    alias lg='ls --gs --sd'
else
{% if ansible_os_family == 'Darwin' or  ansible_os_family == 'FreeBSD' %}
    alias ls='ls -GFha'{# -G - colorize output on BSD #}
{% else %}
    alias ls='ls -Fha'{# -G - do not show Groups on GNU/linux #}
{% endif %}
    alias ll='ls -ltha'
fi

alias su='su -'
alias u='cd ..'
alias uu='cd .. && cd ..'
alias uuu='cd ../../..'
alias uuuu='for i in {1..4}; do cd ..; done'
alias cp='cp -i'

# let vim be nvim:
nvim_path="$(which nvim)"
if [ -x "${nvim_path}" ] ; then
    alias vim="${nvim_path}"
fi

alias cm='cmatrix -bf -u 9 -C cyan'

alias wgetp='wget -P ~/Downloads/'

alias digextip='dig +short myip.opendns.com @resolver1.opendns.com'
alias curlextip='curl -s https://4.ifcfg.me/' # HTTPS
alias curlextip1='curl curlmyip.com'

# On MAC: do not use /usr/local/bin/ssh from Homebrew, use system one:
# also to make this work with 'git push', make sure you removed openssh package from homebrew
# so there is a correct (/usr/bin/ssh) client in your $PATH
alias ssh='/usr/bin/ssh -Y'  # This also enables 'UseKeychan' and 'AddKeysToAgent' ~/.ssh/config options
                             # -Y - use X11 Forwarding by default (works on Linux only)

{% if ansible_os_family == 'Darwin' %}
#===========================================================================

#===================== MacOS specific aliases and functions ================
alias updatedb='sudo sudo /usr/libexec/locate.updatedb'
alias airrest='networksetup -setairportpower airport off; networksetup -setairportpower airport on'

alias rbv='echo "rbenv versions:" && \
    rbenv versions && \
    echo "current ruby -v:" && \
    ruby -v && \
    echo "System ruby:" && \
    /usr/bin/ruby -v'

alias ipa="ipconfig getifaddr"

# return my NAT IP address:
function myip() {
    ifconfig lo0 | grep 'inet ' | sed -e 's/:/ /' | awk '{print "lo0       : " $2}'
    ifconfig en0 | grep 'inet ' | sed -e 's/:/ /' | awk '{print "en0 (IPv4): " $2 " " $3 " " $4 " " $5 " " $6}'
    ifconfig en0 | grep 'inet6 ' | sed -e 's/ / /' | awk '{print "en0 (IPv6): " $2 " " $3 " " $4 " " $5 " " $6}'
    ifconfig en1 | grep 'inet ' | sed -e 's/:/ /' | awk '{print "en1 (IPv4): " $2 " " $3 " " $4 " " $5 " " $6}'
    ifconfig en1 | grep 'inet6 ' | sed -e 's/ / /' | awk '{print "en1 (IPv6): " $2 " " $3 " " $4 " " $5 " " $6}'
    ifconfig en2 | grep 'inet ' | sed -e 's/:/ /' | awk '{print "en2 (IPv4): " $2 " " $3 " " $4 " " $5 " " $6}'
    ifconfig en2 | grep 'inet6 ' | sed -e 's/ / /' | awk '{print "en2 (IPv6): " $2 " " $3 " " $4 " " $5 " " $6}'
}
# As an info only. This function is now a part of zsh `osx` plugin:
#cdf () {
#    finderPath=`osascript -e 'tell application "Finder"
#        try
#            set currentFolder to (folder of the front window as alias)
#            on error
#            set currentFolder to (path to desktop folder as alias)
#        end try
#        POSIX path of currentFolder
#        end tell'`;
#    cd "$finderPath"
#}
{% else %}
alias rbv='echo "rbenv versions:" && \
    rbenv versions && \
    echo "current ruby -v:" && \
    ruby -v'

{% endif %}
#===========================================================================